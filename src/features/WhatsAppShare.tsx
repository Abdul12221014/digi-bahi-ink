import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { toast } from 'sonner';
import { MessageCircle } from 'lucide-react';
import jsPDF from 'jspdf';

export function WhatsAppShare() {
  const [phoneNumber, setPhoneNumber] = useState('');
  const [billType, setBillType] = useState('invoice');
  const [amount, setAmount] = useState('');

  const generatePDF = (type: string, amount: string): Blob => {
    const doc = new jsPDF();
    
    // Header
    doc.setFontSize(20);
    doc.text('DigBahi', 105, 20, { align: 'center' });
    doc.setFontSize(12);
    doc.text('Professional Accounting', 105, 28, { align: 'center' });
    
    // Title
    doc.setFontSize(16);
    doc.text(type === 'invoice' ? 'Tax Invoice' : 'Receipt', 20, 50);
    
    // Details
    doc.setFontSize(11);
    doc.text(`Date: ${new Date().toLocaleDateString('en-IN')}`, 20, 65);
    doc.text(`Amount: ₹${amount}`, 20, 75);
    doc.text('GST Included: As per rate', 20, 85);
    
    // Footer
    doc.setFontSize(9);
    doc.text('Generated by DigBahi Accounting Solutions', 105, 280, { align: 'center' });
    
    return doc.output('blob');
  };

  const handleShare = async () => {
    if (!phoneNumber || !amount) {
      toast.error('Please enter phone number and amount');
      return;
    }

    if (phoneNumber.length !== 10) {
      toast.error('Please enter valid 10-digit phone number');
      return;
    }

    try {
      // Generate PDF
      const pdfBlob = generatePDF(billType, amount);
      const file = new File([pdfBlob], `${billType}_${Date.now()}.pdf`, { type: 'application/pdf' });

      // Check if Web Share API is available
      if (navigator.share && navigator.canShare({ files: [file] })) {
        await navigator.share({
          title: `DigBahi ${billType === 'invoice' ? 'Invoice' : 'Receipt'}`,
          text: `Your ${billType} for ₹${amount}`,
          files: [file]
        });
        toast.success('Bill shared successfully');
      } else {
        // Fallback: Create WhatsApp URL (without file attachment)
        const message = encodeURIComponent(
          `DigBahi ${billType === 'invoice' ? 'Invoice' : 'Receipt'}\n` +
          `Amount: ₹${amount}\n` +
          `Date: ${new Date().toLocaleDateString('en-IN')}`
        );
        const whatsappUrl = `https://wa.me/91${phoneNumber}?text=${message}`;
        window.open(whatsappUrl, '_blank');
        toast.info('Opening WhatsApp (PDF attachment not supported in browser)');
      }

      // Reset form
      setPhoneNumber('');
      setAmount('');
    } catch (error) {
      console.error('Share error:', error);
      toast.error('Failed to share bill');
    }
  };

  return (
    <Card className="p-6 shadow-medium gradient-card animate-scale-in hover-lift">
      <div className="space-y-4">
        <div className="flex items-center gap-3">
          <div className="p-2 rounded-lg bg-gradient-to-br from-[hsl(145_70%_32%)] to-[hsl(40_98%_48%)] shadow-glow">
            <MessageCircle className="w-6 h-6 text-white" />
          </div>
          <h3 className="text-xl font-bold bg-gradient-to-r from-[hsl(145_70%_32%)] to-[hsl(40_98%_48%)] bg-clip-text text-transparent">
            WhatsApp Billing
          </h3>
        </div>
        
        <p className="text-sm text-muted-foreground">
          Generate and share bills directly via WhatsApp
        </p>

        <div className="space-y-3">
          <div>
            <Label htmlFor="billType">Bill Type</Label>
            <Select value={billType} onValueChange={setBillType}>
              <SelectTrigger className="touch-friendly">
                <SelectValue />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="invoice">Tax Invoice</SelectItem>
                <SelectItem value="receipt">Receipt</SelectItem>
              </SelectContent>
            </Select>
          </div>

          <div>
            <Label htmlFor="amount">Amount (₹)</Label>
            <Input
              id="amount"
              type="number"
              placeholder="1000"
              value={amount}
              onChange={(e) => setAmount(e.target.value)}
              className="touch-friendly"
            />
          </div>

          <div>
            <Label htmlFor="phone">Customer Phone (10 digits)</Label>
            <Input
              id="phone"
              type="tel"
              placeholder="9876543210"
              value={phoneNumber}
              onChange={(e) => setPhoneNumber(e.target.value.replace(/\D/g, '').slice(0, 10))}
              className="touch-friendly"
              maxLength={10}
            />
          </div>
        </div>

        <Button
          onClick={handleShare}
          className="w-full gradient-hero touch-friendly hover-glow hover-scale"
          size="lg"
        >
          Share via WhatsApp
        </Button>
      </div>
    </Card>
  );
}
